{"is_source_file": true, "format": "JavaScript", "description": "This file provides a notes service with CRUD operations, schema validation, and offline fallback using localStorage, leveraging Supabase as backend.", "external_files": ["../supabaseClient"], "external_methods": ["getSupabaseClient"], "published": ["ensureSchema", "listNotes", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "isSupaConfigured()", "description": "Checks if Supabase configuration environment variables are set.", "scope": "", "scopeKind": ""}, {"name": "readLocal()", "description": "Reads notes data from localStorage and sorts by updated_at descending.", "scope": "", "scopeKind": ""}, {"name": "writeLocal(list)", "description": "Writes notes data to localStorage.", "scope": "", "scopeKind": ""}, {"name": "generateLocalId()", "description": "Generates a unique local ID for notes stored offline.", "scope": "", "scopeKind": ""}, {"name": "ensureSchema()", "description": "Verifies if the 'notes' table exists in the database; warns if it needs creation.", "scope": "", "scopeKind": ""}, {"name": "listNotes()", "description": "Fetches list of notes, attempting to use Supabase, falling back to localStorage if necessary.", "scope": "", "scopeKind": ""}, {"name": "createNote({ title, content })", "description": "Creates a new note either in the database or locally if not configured.", "scope": "", "scopeKind": ""}, {"name": "updateNote(id, { title, content })", "description": "Updates an existing note either in the database or locally.", "scope": "", "scopeKind": ""}, {"name": "deleteNote(id)", "description": "Deletes a note by ID from the database or localStorage.", "scope": "", "scopeKind": ""}], "calls": ["getSupabaseClient", "supabaseClient.from", "supabaseClient.insert", "supabaseClient.update", "supabaseClient.delete"], "search-terms": ["notesService", "Supabase schema validation", "localStorage fallback", "notes CRUD operations", "offline notes storage"], "state": 2, "file_id": 14, "knowledge_revision": 42, "git_revision": "3d8e149d9ff1799833eddb5e0c52510205d374f9", "revision_history": [{"29": ""}, {"42": "3d8e149d9ff1799833eddb5e0c52510205d374f9"}], "ctags": [{"_type": "tag", "name": "LS_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^const LS_KEY = 'notes_fallback';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "TABLE", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^const TABLE = 'notes';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^export async function createNote({ title, content }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ title, content })"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const created = { id: generateLocalId(), title, content, updated_at: now };$/", "language": "JavaScript", "kind": "class", "scope": "createNote", "scopeKind": "class"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^export async function deleteNote(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "ensureSchema", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^export async function ensureSchema() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "generateLocalId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^function generateLocalId() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const created = { id: generateLocalId(), title, content, updated_at: now };$/", "language": "JavaScript", "kind": "property", "scope": "createNote.created", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const updated = { id, title, content, updated_at: now };$/", "language": "JavaScript", "kind": "field", "scope": "updateNote.updated", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const updated = { id: generateLocalId(), title, content, updated_at: now };$/", "language": "JavaScript", "kind": "property", "scope": "updateNote.updated", "scopeKind": "class"}, {"_type": "tag", "name": "isSupaConfigured", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^function isSupaConfigured() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^export async function listNotes() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "readLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^function readLocal() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const created = { id: generateLocalId(), title, content, updated_at: now };$/", "language": "JavaScript", "kind": "field", "scope": "createNote.created", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const updated = { id: generateLocalId(), title, content, updated_at: now };$/", "language": "JavaScript", "kind": "field", "scope": "updateNote.updated", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^export async function updateNote(id, { title, content }) {$/", "language": "JavaScript", "kind": "function", "signature": "(id, { title, content })"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^    const updated = { id: generateLocalId(), title, content, updated_at: now };$/", "language": "JavaScript", "kind": "class", "scope": "updateNote", "scopeKind": "class"}, {"_type": "tag", "name": "writeLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-163863-164161/notes_frontend/src/services/notesService.js", "pattern": "/^function writeLocal(list) {$/", "language": "JavaScript", "kind": "function", "signature": "(list)"}], "hash": "d10bbb327fdefafba1fea570a49f49d1", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/notesService.js", "fields": [{"name": "const created = { id: generateLocalId(), title, content, updated_at: now };", "scope": "createNote.created", "scopeKind": "class", "description": "unavailable"}, {"name": "const updated = { id, title, content, updated_at: now };", "scope": "updateNote.updated", "scopeKind": "class", "description": "unavailable"}, {"name": "const updated = { id: generateLocalId(), title, content, updated_at: now };", "scope": "updateNote.updated", "scopeKind": "class", "description": "unavailable"}]}